{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@blomstra/linear/webpack/bootstrap","webpack://@blomstra/linear/webpack/runtime/compat get default export","webpack://@blomstra/linear/webpack/runtime/define property getters","webpack://@blomstra/linear/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/linear/webpack/runtime/make namespace object","webpack://@blomstra/linear/external root \"flarum.core.compat['forum/app']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/linear/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@blomstra/linear/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@blomstra/linear/./src/forum/components/SendToLinearModal.tsx","webpack://@blomstra/linear/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@blomstra/linear/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@blomstra/linear/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","import Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport app from \"flarum/forum/app\";\nimport Button from \"flarum/common/components/Button\";\nimport Model from 'flarum/common/Model';\nimport DiscussionPage from \"flarum/forum/components/DiscussionPage\";\nimport Discussion from \"flarum/common/models/Discussion\";\n\nexport default class SendToLinearModal extends Modal {\n  // True by default, dictates whether the modal can be dismissed by clicking on the background or in the top right corner.\n  static isDismissible = true;\n\n  teams = [];\n  priorities = [];\n  defaultTeam = '';\n  ready = false;\n  selectedTeam = '';\n  selectedPriority = 0;\n  discussion = '';\n  tags = [];\n\n  getTags(): void {\n    let tags = this.attrs.discussion !== '' ? this.attrs.discussion.tags() : [];\n    tags.map((tag) => {\n      this.tags.push(tag.data.id)\n    });\n  }\n\n  loadData(): void {\n\n    this.getTags();\n    m.request(\n      {\n        method: \"GET\",\n        url: \"/api/linear/teams\",\n      }\n    ).then((response) => {\n      this.teams = response.data.attributes;\n    });\n\n    m.request(\n      {\n        method: \"GET\",\n        url: \"/api/linear/priorities\",\n      }\n    ).then((response) => {\n      this.priorities = response.data.attributes;\n    });\n\n    this.selectedTeam = this.defaultTeam;\n    this.selectedPriority = 0;\n\n  }\n\n  className() {\n    // Custom CSS classes to apply to the modal\n    return 'custom-modal-class';\n  }\n\n  title() {\n    // Title of the modal.\n    return 'Send to Linear';\n  }\n\n  content() {\n    if (this.teams.length > 0 && this.priorities.length > 0 && this.selectedTeam !== '') {\n    return <>\n      <div class=\"Modal-body\">\n        <div class=\"Form\">\n          <div class=\"Form-group\">\n            <label>Team</label>\n            <span class=\"Select\">\n              <select\n                value={this.selectedTeam}\n                class=\"Select-input FormControl\"\n                onchange={(e) => {\n                  this.selectedTeam = e.target.value;}\n                }\n              >\n                {this.teams.map((team) => {\n                  return <option\n                    value={team.id}\n                  >{team.name}\n                  </option>\n                })}\n              </select>\n            </span>\n          </div>\n          <div class=\"Form-group\">\n            <label>Priority</label>\n            <span class=\"Select\">\n              <select\n                class=\"Select-input FormControl\"\n                value={this.selectedPriority}\n                onchange={(e) => {\n                  this.selectedPriority = e.target.value;\n                }\n                }\n              >\n                {this.priorities.map((priority) => {\n                  return <option\n                    value={priority.priority}\n                  >\n                    {priority.label}\n                  </option>\n                })}\n              </select>\n            </span>\n          </div>\n          <div class=\"Form-group\">\n            <Button className=\"Button Button--primary\" type=\"submit\">\n              <i id=\"linear-submission-loading\" class=\"fa fa-spinner fa-spin visually-hidden\" aria-hidden=\"true\"></i> Send to Linear\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n    } else {\n      return <>\n        <div class=\"Modal-body\">\n          <p class=\"center\"><i class=\"fas fa-spinner fa-spin\" aria-hidden=\"true\"></i> Loading...</p>\n        </div>\n      </>\n    }\n    // Content to show in the modal's body\n\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n    // If your modal contains a form, you can add form processing logic here.\n    // Show the icon in the submit button\n    document.getElementById('linear-submission-loading').classList.remove('visually-hidden');\n    m.request(\n      {\n        method: \"POST\",\n        url: \"/api/linear/issues\",\n        headers: {\n          'X-CSRF-Token': app.session.csrfToken,\n        },\n        body: {\n          team: this.selectedTeam,\n          priority: this.selectedPriority,\n          tags: this.tags,\n          discussion: this.attrs.discussion.id(),\n        }\n      }\n    ).then((response) => {\n      //console.log(response);\n      if (response.data.id !== undefined || response.data.id !== null) {\n        this.attrs.linear = response.data.id;\n        app.current.data.discussion.data.attributes.linearIssueId = response.data.id;\n        document.getElementById('linear-submission-loading').classList.add('visually-hidden');\n        m.redraw();\n        this.hide();\n      } else {\n        alert('Something went wrong, please try again.');\n      }\n    });\n  }\n\n  oninit(vnode) {\n    super.oninit(vnode);\n    this.loadData();\n    this.defaultTeam = app.forum.attribute('blomstraLinearDefaultTeamId');\n    this.selectedTeam = this.defaultTeam;\n  }\n\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport DiscussionPage from \"flarum/forum/components/DiscussionPage\";\nimport Discussion from \"flarum/common/models/Discussion\";\nimport LinkButton from \"flarum/common/components/LinkButton\";\nimport Button from \"flarum/common/components/Button\";\nimport SendToLinearModal from \"./components/SendToLinearModal\";\nimport Badge from 'flarum/common/components/Badge';\n\napp.initializers.add('blomstra/linear', () => {\n  extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n    const discussion:Discussion  = this.discussion;\n\n    let linear = null;\n    linear = discussion.attribute('linearIssueId');\n    let lx = linear !== null ? linear.split(':::') : 'a:::b';\n    let lOrg = lx[0];\n    let lId = lx[1];\n\n    const canAddToLinear = discussion.attribute('canAddToLinear');\n    if (!canAddToLinear) {\n      return;\n    }\n\n    items.add(\n      'blomstra-linear',\n      linear === null ?\n        (\n          <Button icon=\"far fa-paper-plane\" class=\"Button\" onclick={() => app.modal.show(SendToLinearModal, { discussion })}>\n            {app.translator.trans('blomstra-linear.forum.controls.send_to_linear_button')}\n          </Button>\n        ) : (\n          <LinkButton\n            icon=\"far fa-paper-plane\"\n            class=\"Button\"\n            href={\"https://linear.app/\" + lOrg + \"/issue/\" + lId}\n            external={true}\n            target=\"_blank\">\n            Open in Linear\n          </LinkButton>\n  ), 100);\n  });\n\n  extend(Discussion.prototype, 'badges', function (badges) {\n    const discussion = this;\n    let linear = null;\n    linear = discussion.attribute('linearIssueId');\n    let lx = linear !== null ? linear.split(':::') : 'a:::b';\n    let lOrg = lx[0];\n    let lId = lx[1];\n    const canAddToLinear = discussion.attribute('canAddToLinear');\n\n    if (canAddToLinear && linear !== null) {\n      badges.add(\n        'linear',\n        <Badge type=\"linear\" icon=\"far fa-paper-plane\" label={app.translator.trans('blomstra-linear.forum.badges.linear.tooltip')} />,\n        10\n      );\n    }\n  });\n\n\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","SendToLinearModal","_Modal","subClass","superClass","_this","_len","arguments","length","args","Array","_key","apply","concat","teams","priorities","defaultTeam","ready","selectedTeam","selectedPriority","discussion","tags","create","constructor","_proto","getTags","_this2","this","attrs","map","tag","push","data","id","loadData","_this3","m","request","method","url","then","response","attributes","className","title","content","_this4","'['","class","onchange","e","target","team","name","priority","label","Button","type","onsubmit","_this5","preventDefault","document","getElementById","classList","remove","headers","app","csrfToken","body","undefined","linear","linearIssueId","add","redraw","hide","alert","oninit","vnode","attribute","Modal","isDismissible","extend","DiscussionPage","items","lx","split","lOrg","lId","icon","onclick","show","trans","LinkButton","href","external","Discussion","badges","Badge"],"sourceRoot":""}