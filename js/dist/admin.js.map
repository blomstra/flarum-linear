{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@blomstra/linear/webpack/bootstrap","webpack://@blomstra/linear/webpack/runtime/compat get default export","webpack://@blomstra/linear/webpack/runtime/define property getters","webpack://@blomstra/linear/webpack/runtime/hasOwnProperty shorthand","webpack://@blomstra/linear/webpack/runtime/make namespace object","webpack://@blomstra/linear/external root \"flarum.core.compat['admin/app']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['tags/admin/components/EditTagModal']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['common/extend']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['common/components/SelectDropdown']\"","webpack://@blomstra/linear/external root \"flarum.core.compat['common/components/Button']\"","webpack://@blomstra/linear/./src/admin/index.tsx","webpack://@blomstra/linear/./src/admin/addLinearLabelMappingToTagEditModal.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['tags/admin/components/EditTagModal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/SelectDropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","import app from 'flarum/admin/app';\nimport { addLinearLabelMappingToTagEditModal } from \"./addLinearLabelMappingToTagEditModal\";\n\napp.initializers.add('blomstra-linear', () => {\n    addLinearLabelMappingToTagEditModal();\n\n    app.extensionData\n        .for('blomstra-linear')\n        .registerSetting({\n            setting: 'blomstra-linear.token',\n            type: 'password',\n            label: app.translator.trans('blomstra-linear.admin.settings.token_label'),\n            help: app.translator.trans('blomstra-linear.admin.settings.token_description'),\n        })\n        .registerSetting({\n            setting: 'blomstra-linear.cachettl',\n            type: 'number',\n            default: 0,\n            label: app.translator.trans('blomstra-linear.admin.settings.cachettl_label'),\n            help: app.translator.trans('blomstra-linear.admin.settings.cachettl_description'),\n        })\n        .registerPermission(\n            {\n                icon: 'fab fa-trello',\n                label: app.translator.trans('blomstra-linear.admin.permissions.add_to_linear'),\n                permission: 'discussion.addToLinear',\n            },\n            'start'\n        );\n\n    if ('blomstra-linear.token' in app.data.settings && app.data.settings['blomstra-linear.token'] !== '') {\n        app.extensionData.for('blomstra-linear').registerSetting(function () {\n            return (\n                <div className=\"Form-group\">\n                    <h2> {app.translator.trans('blomstra-linear.admin.settings.teams_header')} </h2>\n                </div>\n            );\n        });\n        // Make a request to the API to get the teams\n        const teams = { null: 'Select a team' };\n        m.request({\n            method: 'GET',\n            url: '/api/linear/teams',\n        }).then((response) => {\n            response.data.attributes.map((team) => {\n                teams[team.id] = team.name;\n            });\n\n            if (Object.keys(teams).length > 1) {\n                console.log(teams);\n                app.extensionData.for('blomstra-linear').registerSetting({\n                    setting: 'blomstra-linear.default-team',\n                    type: 'select',\n                    label: app.translator.trans('blomstra-linear.admin.settings.default_team_label'),\n                    help: app.translator.trans('blomstra-linear.admin.settings.default_team_description'),\n                    options: teams,\n                    default:\n                        'blomstra-linear.default-team' in app.data.settings &&\n                        app.data.settings['blomstra-linear.default-team'] !== '' &&\n                        app.data.settings['blomstra-linear.default-team'] !== null\n                            ? app.data.settings['blomstra-linear.default-team']\n                            : null,\n                });\n            }\n        });\n    }\n});\n","import app from 'flarum/admin/app';\nimport EditTagModal  from 'flarum/tags/admin/components/EditTagModal';\nimport {extend} from \"flarum/common/extend\";\nimport SelectDropdown from 'flarum/common/components/SelectDropdown';\nimport Stream from 'flarum/common/utils/Stream';\nimport Button from 'flarum/common/components/Button';\n\ntype LinearLabel = {\n    id: string\n    name: string\n    isGroup: boolean\n}\n\nexport function addLinearLabelMappingToTagEditModal () {\n    let labels: LinearLabel[] = []\n\n    m.request({\n        method: \"GET\",\n        url: \"/api/linear/labels\",\n    }).then((response) => {\n        labels = response.data.attributes\n        console.error(response.data)\n    })\n\n    extend(EditTagModal.prototype, 'oninit', function () {\n        this.linearLabelId = this.tag.data.attributes.linearLabelId\n    })\n\n    extend(EditTagModal.prototype, 'fields', function (items) {\n        const LinearLabelOptions = [\n            {\n                value: null,\n                text: app.translator.trans(`blomstra-linear.admin.tags.fields.linear_label_id.default_select_value`),\n            },\n            ...labels.map((label) => ({\n                value: label.id,\n                text: label.name,\n            }))\n        ]\n\n        const makeLinearLabelSelect = () => ((\n            <SelectDropdown\n                buttonClassName=\"Button Button--inverted\"\n                defaultLabel={app.translator.trans(`blomstra-linear.admin.tags.fields.linear_label_id.default_select_value`)}\n            >\n                {LinearLabelOptions.map(option => (\n                    <Button\n                        className=\"Button\"\n                        value={option.value}\n                        active={this.linearLabelId === option.value}\n                        type=\"button\"\n                        onclick={() => {\n                            this.linearLabelId = option.value\n                        }}\n                    >\n                        {option.text}\n                    </Button>\n                ))}\n            </SelectDropdown>\n        ));\n\n        items.add(\n            'linearLabelId',\n            <div className=\"Form-group\">\n                <label>{app.translator.trans(`blomstra-linear.admin.tags.fields.linear_label_id.label`)}</label>\n                {makeLinearLabelSelect()}\n            </div>,\n            30,\n        );\n    })\n\n    extend(EditTagModal.prototype, 'submitData', function (data) {\n        data.linearLabelId = this.linearLabelId\n\n        return data\n    })\n}"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","add","labels","m","request","method","url","then","response","data","attributes","console","error","extend","EditTagModal","this","linearLabelId","tag","items","_this","LinearLabelOptions","text","trans","concat","map","label","id","name","className","SelectDropdown","buttonClassName","defaultLabel","option","Button","active","type","onclick","registerSetting","setting","help","default","registerPermission","icon","permission","settings","teams","null","team","keys","length","log","options"],"sourceRoot":""}